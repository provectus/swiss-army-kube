## Configuration for alertmanager
## ref: https://prometheus.io/docs/alerting/alertmanager/
##
alertmanager:
  ## Deploy alertmanager
  ##
  enabled: ${alertmanager_enabled}
  ingress:
    enabled: ${alertmanager_ingress_enabled}
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: ${certmanager_issuer}
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"

    ## Hosts must be provided if Ingress is enabled.
    ##
    hosts:
      - ${alertmanager_host}
    tls:
      - secretName: ${alertmanager_host}-tls
        hosts:
        - ${alertmanager_host}

grafana:
  enabled: ${grafana_enabled}
  image:
    tag: ${grafana_version}
  persistence:
    enabled: ${grafana_pvc_enabled}
  adminPassword: ${grafana_admin_password}

  grafana.ini:
    server:
      domain: ${grafana_url}
      root_url: https://${grafana_url}
    users:
      auto_assign_org_role: Editor
    auth.google:
      enabled: ${grafana_google_auth}
      scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
      auth_url: https://accounts.google.com/o/oauth2/auth
      token_url: https://accounts.google.com/o/oauth2/token
      allowed_domains: ${grafana_allowed_domains}
      allow_sign_up: true
  envFromSecret:      

  ingress:
    ## If true, Grafana Ingress will be created
    ##
    enabled: ${grafana_ingress_enabled}

    ## Annotations for Grafana Ingress
    ##
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: ${certmanager_issuer}
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"    

    ## Hostnames.
    ## Must be provided if Ingress is enable.
    hosts:
      - ${grafana_url}
    ## TLS configuration for grafana Ingress
    ## Secret must be manually created in the namespace
    ##
    tls:
      - secretName: ${grafana_url}-tls
        hosts:
        - ${grafana_url}

## Deploy a Prometheus instance
##
prometheus:

  enabled: ${prometheus_enabled}
  ingress:
    enabled: ${prometheus_ingress_enabled}
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: ${certmanager_issuer}
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"        


    ## Hostnames.
    ## Must be provided if Ingress is enabled.
    hosts:
      - ${prometheus_url}
    ## TLS configuration for Prometheus Ingress
    ## Secret must be manually created in the namespace
    ##
    tls:
      - secretName: ${prometheus_url}-tls
        hosts:
          - ${prometheus_url}

  prometheusSpec:
    ## External URL at which Prometheus will be reachable.
    ##
    externalUrl: "https://${prometheus_url}"
